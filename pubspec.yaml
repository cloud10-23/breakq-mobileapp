name: breakq
description: An e-commerce retail shop application to scan for barcodes and checkout easily
author: Ranger Of Gondor
homepage: https://rangerofgondor.gitlab.io/profile

# The following line prevents the package from being accidentally published to
# pub.dev using `pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.0.0+1

environment:
  sdk: ">=2.7.0 <3.0.0"

dependencies:
  flutter:
    sdk: flutter

  flutter_localizations:
    sdk: flutter

  camera: ^0.10.0
  path_provider: null
  path: null

  # A simple Service Locator.
  get_it: ^7.2.0
  # BLoC Design Pattern (Business Logic Component)
  # bloc: ^8.0.2https://pub.dev/packages/location
  bloc: ^7.2.1
  # Widgets that make it easy to integrate blocs and cubits into Flutter.
  # flutter_bloc: ^8.0.1
  flutter_bloc: ^7.3.3
  # An abstract class that helps to implement equality without needing to explicitly override == and hashCode.
  equatable: ^2.0.3
  # Dart implementation of sprintf.
  sprintf: ^6.0.0
  # Flutter plugin for reading and writing simple key-value pairs. Wraps NSUserDefaults on iOS and SharedPreferences on Android.
  shared_preferences: ^2.0.4
  # A Flutter plugin to easily handle realtime location in iOS and Android.
  location: ^4.4.0
  # Introduction/Onboarding package for flutter app with some customizations possibilities.
  introduction_screen: ^3.0.2
  # A package provides an easy way to add shimmer effect in Flutter project.
  shimmer: ^2.0.0
  # A widget provided to the flutter scroll component drop-down refresh and pull up load.
  pull_to_refresh: ^2.0.0
  # Custom Radio Buttons and Grouped Check Box Button.
  custom_radio_grouped_button: any
  # The best swiper(carousel) for flutter, with multiple layouts, infinite loop. Compatible with Android & iOS.
  flutter_swiper: ^1.1.6
  # Flutter library to load and cache network images. Can also be used with placeholder and error widgets.
  cached_network_image: ^3.1.0
  # Flutter plugin for sharing content via the platform share UI, using the ACTION_SEND intent on Android and UIActivityViewController on iOS.
  # share: ^0.6.5+2
  # Flutter plugin for selecting images from the Android and iOS image library, and taking new pictures with the camera.
  image_picker: ^0.8.4+4
  # A list with helper methods to programmatically scroll to an item.
  scrollable_positioned_list: ^0.2.2
  # Flutter library for simple and fast QR code rendering via a Widget or custom painter.
  qr_flutter:
    git: 
      url: https://github.com/insinfo/qr.flutter.git
  # Slidable list item with directional slide actions that can be dismissed.
  # flutter_slidable: ^0.5.7
  # A Markdown renderer for Flutter.
  flutter_markdown: ^0.6.0
  # URL Launcher to launch Gmail or Phone
  url_launcher: ^6.0.3
  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.0

  #Firebase Deps
  firebase_core: ^2.9.0
  firebase_auth: ^4.7.1
  google_sign_in: ^5.0.0
  flutter_facebook_auth: ^4.0.1

  #Barcode Scanning
  # qrscan: ^0.2.21
  # flutter_barcode_scanner: ^1.0.2
  flutter_barcode_scanner: ^2.0.0
  # qr_code_scanner: ^0.3.0

  # Speech To Text
  speech_to_text: ^5.6.0

  # SVG Assets
  flutter_svg: ^1.0.1

  flutter_badged: ^2.0.2

  #Icons
  flutter_icons: ^1.1.0

  # OTP field
  pin_code_fields: ^7.0.0

  # Phone Number codes
  intl_phone_field: ^3.1.0

  #Json Annotation:
  json_annotation: #^4.1.0

  # For Pagination
  infinite_scroll_pagination: ^3.1.0

  # For bottom navigation
  flutter_snake_navigationbar: ^0.6.1
  pdf: ^3.7.1
  open_file: ^3.2.1
  platform: ^3.1.0
  razorpay_flutter: 1.2.5
  provider: ^6.0.5
  firebase_app_check: ^0.1.1+14
  # fancy_bottom_navigation: ^0.3.3

  firebase_core_platform_interface: 4.8.0

dev_dependencies:
  flutter_test:
    sdk: flutter
  flutter_launcher_icons: ^0.9.0

  #Json Serialization:
  build_runner: #^2.0.0
  json_serializable: #^5.0.0

# To run the Flutter Launcher Icons:
# flutter pub run flutter_launcher_icons:main
flutter_icons:
  image_path: "assets/images/icons/BQ_Icon.png"
  adaptive_icon_background: "#1565C0"
  adaptive_icon_foreground: "assets/images/icons/BQ_Icon.png"
  android: true
# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/data/
    - assets/images/
    - assets/images/onboarding/
    - assets/images/products/
    - assets/images/categories/
    - assets/images/offers/
    - assets/images/checkout/
    - assets/images/illustrations/
    - assets/images/ads/
    - assets/images/icons/
    # - assets/images/banners/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages

  fonts:
    - family: Raleway
      fonts:
        - asset: assets/fonts/Raleway-Black.ttf
        - asset: assets/fonts/Raleway-BlackItalic.ttf
        - asset: assets/fonts/Raleway-Bold.ttf
        - asset: assets/fonts/Raleway-BoldItalic.ttf
        - asset: assets/fonts/Raleway-ExtraBold.ttf
        - asset: assets/fonts/Raleway-ExtraBoldItalic.ttf
        - asset: assets/fonts/Raleway-ExtraLight.ttf
        - asset: assets/fonts/Raleway-ExtraLightItalic.ttf
        - asset: assets/fonts/Raleway-Italic.ttf
        - asset: assets/fonts/Raleway-Light.ttf
        - asset: assets/fonts/Raleway-LightItalic.ttf
        - asset: assets/fonts/Raleway-Medium.ttf
        - asset: assets/fonts/Raleway-MediumItalic.ttf
        - asset: assets/fonts/Raleway-Regular.ttf
        - asset: assets/fonts/Raleway-SemiBold.ttf
        - asset: assets/fonts/Raleway-SemiBoldItalic.ttf
        - asset: assets/fonts/Raleway-Thin.ttf
        - asset: assets/fonts/Raleway-ThinItalic.ttf

flutter_intl:
  enabled: true # Required. Must be set to true to activate the plugin. Default: false
  class_name: L10n # Optional. Sets the name for the generated localization class. Default: S
  main_locale: en # Optional. Sets the main locale used for generating localization files. Provided value should consist of language code and optional script and country codes separated with underscore (e.g. 'en', 'en_GB', 'zh_Hans', 'zh_Hans_CN'). Default: en
